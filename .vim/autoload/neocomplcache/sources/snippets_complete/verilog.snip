snippet     module
abbr        module mod(...)
prev_word   '^'
    module ${1:module name}(${2:ports});
        input $2;
        ${3}
    endmodule
    ${0}

snippet     function
abbr        function func;
prev_word   '^'
    function ${1:function name};
        input ${2:argument};
        ${3}
    endfunction
    ${0}

snippet     begin
abbr        begin ... end
prev_word   '^'
    begin
        ${1}
    end
    ${0}

snippet     fork
abbr        fork ... join
prev_word   '^'
    fork
        ${1}
    join
    ${0}

snippet     case
abbr        case
prev_word   '^'
    case(${1:condition})
        ${2}
    endcase
    ${0}

snippet     always
abbr        always begin
prev_word   '^'
    always @(${1:posedge ck or posedge rs}) begin
        ${2}
    end
    ${0}
